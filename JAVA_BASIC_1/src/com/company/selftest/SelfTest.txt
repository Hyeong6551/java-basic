> 각 문제당 클래스 파일로 만들어주세요!
> 안보고 작성가능하게 연습해주세요! 


 		[SelfTest001] 출력(1) 
  			Hello 출력
 
		[SelfTest002] 출력(2)
		    System.out.println(10 + 20);  결과 : 10+20 문자열이 나오게 만들기
		    
		[SelfTest003] 입력   Scanner 테스트
		   	당신의 이름을 입력하세요. __입력받기
		 	당신의 이름은 __입니다.
		 
		[SelfTest004] IF (1형식)
		 * 1형식은 무조건 IF구문안을 읽는다. 모든과목 체크
		   	[1]국어점수를입력해주세요 __입력받기
		 	[2]영어점수를입력해주세요 __입력받기 
		 	※ 과락인 모든과목을 출력해주세요.
		 	만약 국어점수가 40점 미만이라면 국어과락 
		   	만약 영어점수가 40점 미만이라면 영어과락  
		 			 
		[SelfTest005] IF (2형식)
		 * 맞다 /틀리다
		   	당신의 나이를 입력하세요. __입력받기
		 	만약 19세 미만이라면 당신은  미성년자입니다.
		 	아니라면 성인입니다.
		 	
		[SelfTest006] If ~ ELSE (3형식)
		 * 여러개의 조건
		   	[1]국어점수를입력해주세요 __입력받기
		   	90점이상이라면 수	 / 80점 이상이라면 우/ 70점 이상이라면 미 /60점이상이라면 양 / 그 이외 가
		   	
		[SelfTest007] SWITCH
		 	a,b,c중에 입력해주세요
		 	a또는 A라면 apple
		 	b또는 B라면 banana
		 	c또는 C라면 coconut
		 	그이외 대소문자 관계없이 a,b,c만 입력가능합니다 
		
  		[SelfTest008] for
  			1,2,3,4,5,6,7,8,9,10 출력
  
		[SelfTest009] while
  			1,2,3,4,5,6,7,8,9,10 출력
		    
		[SelfTest010] do while 
 			1,2,3,4,5,6,7,8,9,10 출력

		[SelfTest011] for
		 * 1~100사이를 입력할때까지 무한반복하기 
		 * 만약 1~100사이를 입력하면 빠져나오기			
		 
		[SelfTest012] while
		 * 1~100사이를 입력할때까지 무한반복하기 
		 * 만약 1~100사이를 입력하면 빠져나오기	
 
 		[SelfTest013] for 응용
  			원하는 단을 입력하세요 _예) 2단
  			2*1 =2
   			2*2 =4 ...
  
		[SelfTest014] 이중for 응용   [#]
  			2~4단까지 출력하세요
		    
		[SelfTest015] 배열(1)
		    1. 숫자형공간이 5개인  배열 arr 만들기
		    2. for구문을 이용하여  1~5까지 입력
		    3. for구문을 이용하여  1~5까지 출력
		    
		[SelfTest016] 이차원배열
		 	1. 2*3배열만들기
		 	2. for구문을 이용하여 다음과 같이 데이터 입력
		 	3. for구문을 이용하여 다음과 같이 데이터 출력
		 	   100	101 102
		 	   200	201 202
		 	   
		[SelfTest017] 이차원배열
		 	1.4*5 배열만들기
		 	2.배열에 1~20까지 데이터 입력
		 	3.다음과 같이 출력하기 
		 	
		 	1	2	3	4	5
		 	6	7	8	9	10
		 	11	12	13	14 	15
		 	16	17	18	19	20
		 	
		[SelfTest018] 함수(1) : 함수의 구조	
		   1. cat() 함수 정의하시오 : 접근(어디에서나) , 클래스멤버, 리턴값 void, 파라미터 없음
		   2. cat() 실행시 야옹출력
		
		[SelfTest019] 함수(2) : 파라미터
		   1. hap(3,5) 함수를 정의하시오 :  접근(어디에서나) , 클래스멤버, 리턴값 void, 파라미터 두개의 숫자를 입력받아줌
		   2. 기능 : 두 수를 더한값을 출력해줌.
		   3. hap(3,5);	  결과값 :   두수의 합 : 8
		
		[SelfTest020] 함수(3) : return 
		   1. 메인은 다음과 같다.
			System.out.println(  hi("sally"));
			
		   2. 다음과 같이 출력    Hi! sally~!

		[SelfTest021] 함수(4) : 메서드오버로딩
		 	1. 다음의 결과가 나오게 메서드를 구현하시오		    
				print(3,5);			결과값 :   8 출력
				print(1.2,3.4);		결과값 :   4.6출력
	
		
		[SelfTest022] 함수(5) :  
			메서드오버로딩이과 오버라이딩이란?
 
		[SelfTest023] oop
			OOP?  
			
		[SelfTest024]  oop 
---------------------------------------------------------------------
class A11{
	int a;   // (1)  
	A11(){   }
	A11(int a){  this.a = a;  }   //  (2) 
	//(3) void show()  
	void show() { this.a =11;   System.out.println(    this.a   ); }
	//(4) static void classMethod()  
	static void classMethod() {   this.a = 12;  }
	//(5) int show2()
	int show2(){  int a;  return a; }
}
public class EX011 {
	public static void main(String []args) {  
		A11  a1  = new A11();    (6) 
	} // end main
} // end class
---------------------------------------------------------------------
Q1  다음문제에서 (1),(2),(3),(4),(5)를 
	[ 클래스변수, 인스턴스변수, 지역변수 , 클래스메서드, 인스턴스메서드 ]에서 고르시오.  
Q2  클래스 A11에서 오류나는 곳을 수정하고 그 이유를 적으시오.
Q3 (6)번위치에서  
	메모리 빌려오고, 객체 생성하는 역할  : ()  
	String은 null, int는 0으로 초기화하는 역할 : () 
	new A11()한 주소를 갖고 있는 것은 : ()    
	
Q4 기본생성자를 반드시 선언해야하는 경우를 적으시오. 


		[SelfTest025] class(1) 필요한 자료의 묶음.
 		 1. 메인은 다음과 같다.
 		 	Milk m1 = new Milk("choco" , 1200);
 		 	System.out.println( m1 );  // 출력된 결과 : choco / 1500
 		 	Milk m2 = new Milk();
 		 	System.out.println( m2 );  // 출력된 결과 : white / 1300
 		 	
		 2.	Milk 클래스를 구현하시오 
			  	클래스의 기능 : 데이터를 받아서 전달하는 기능  (DTO)
				1) 멤버변수    private  name이름 ,  private  price가격      
				2) 생성자      기본생성자 : 
						   필드생성자 : 이름,  , 가격을 입력받아 처리해주는 생성자	
				3) 멤버함수  ---		  

		                
		============================================================      
		
		[SelfTest026] class(2) 클래스 배열
 		 1. 메인은 다음과 같다.
			Milk []milks = new Milk[3];  

		 2.	 출력된 결과 : 
			 * white  / 1000
			 * choco  / 1200
			 * banana / 1500 
			 
		                
		============================================================      

		[SelfTest027] 다형성
package com.company.day008_oop3_extends;

// Q1. 상속도 그리기
// Q2. 각클래스에서 사용할수있는 멤버변수/멤버메서드
 
class Papa extends Object{  
	int money = 10000;     
	public Papa() { super(); }
	public void sing() {  System.out.println("GOD-거짓말");  }
}// end class

class Son2 extends Papa{ 
	int money = 1500;
	public Son2() { super(); }
	@Override public void sing() {  System.out.println("빅뱅-거짓말"); }
} // end class
public class Polymorphism005 {
	public static void main(String[] args) {
		// Q8.  부모 =  자식   /  업,다운캐스팅 /  타입캐스팅 필요여부
		Papa mypapa = new Son2();    
		// Q3. Papa mypapa 의미?
 
		// Q4. 인스턴스화한 실제 메모리 빌려온그림  
		System.out.println(mypapa.money); // Q5.  출력    
		mypapa.sing();  //Q6. 출력   
		 //Q7. mypapa.money 를 이용해서  1500 출력되게 해주세요.  
 
	}
}
 









		 
		                
		============================================================      
		 
		[SelfTest028]   콜렉션프레임워크의 종류 (필기)
		 List   :    순서 [] , 중복허용 []  
				=>  사용가능메서드: [추가][삭제][갯수][데이터꺼내기]
		 Set    :    순서 [] , 중복허용 []  
				=>  사용가능메서드: [추가][삭제][갯수][데이터꺼내기]
		 Map    :    순서가아닌 [ , ]의 쌍(ENTRY)으로 이루어짐
		                =>  사용가능메서드: [추가][삭제][갯수][데이터꺼내기]  
		                
		                
		============================================================                
 		[SelfTest029]  ArrayList
 		 * 	 dto 를 이용하여 ArrayList   이용해서 만들기  
		[SelfTest030]  HashSet
		 *   dto 를 이용하여 HashSet     이용해서 만들기  
		[SelfTest031]  HashMap
		 *   dto 를 이용하여 HashMap     이용해서 만들기  
		 
		 ㅁ 출력된결과
		 ======================
		 NO	NAME	PRICE
		 ======================
		 1	white		1000
		 2	choco		1200
		 3	banana		1300		
		 
		 
	
 